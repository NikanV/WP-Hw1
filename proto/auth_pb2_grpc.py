# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import auth_pb2 as auth__pb2


class AuthenticatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RequestPQ = channel.unary_unary(
                '/Authenticator/RequestPQ',
                request_serializer=auth__pb2.PQRequest.SerializeToString,
                response_deserializer=auth__pb2.PQResponse.FromString,
                )
        self.RequestDHParams = channel.unary_unary(
                '/Authenticator/RequestDHParams',
                request_serializer=auth__pb2.DHRequest.SerializeToString,
                response_deserializer=auth__pb2.DHResponse.FromString,
                )
        self.AuthCheck = channel.unary_unary(
                '/Authenticator/AuthCheck',
                request_serializer=auth__pb2.ACRequest.SerializeToString,
                response_deserializer=auth__pb2.ACResponse.FromString,
                )


class AuthenticatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RequestPQ(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestDHParams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthenticatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RequestPQ': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestPQ,
                    request_deserializer=auth__pb2.PQRequest.FromString,
                    response_serializer=auth__pb2.PQResponse.SerializeToString,
            ),
            'RequestDHParams': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestDHParams,
                    request_deserializer=auth__pb2.DHRequest.FromString,
                    response_serializer=auth__pb2.DHResponse.SerializeToString,
            ),
            'AuthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthCheck,
                    request_deserializer=auth__pb2.ACRequest.FromString,
                    response_serializer=auth__pb2.ACResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Authenticator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Authenticator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RequestPQ(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Authenticator/RequestPQ',
            auth__pb2.PQRequest.SerializeToString,
            auth__pb2.PQResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestDHParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Authenticator/RequestDHParams',
            auth__pb2.DHRequest.SerializeToString,
            auth__pb2.DHResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Authenticator/AuthCheck',
            auth__pb2.ACRequest.SerializeToString,
            auth__pb2.ACResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
