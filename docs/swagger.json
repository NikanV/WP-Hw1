{
    "swagger": "2.0",
    "info": {
        "description": "a service which you can register in and get access to the users database",
        "title": "WebPrograming homework 1",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/auth/reqdh": {
            "get": {
                "description": "second step of registeration which we send auth info and public keys.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Request DH",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The message ID (even and greater than zero).",
                        "name": "message_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The nonce (20 characters long).",
                        "name": "nonce",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The server_nonce (20 characters long).",
                        "name": "server_nonce",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "public key from client",
                        "name": "a",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WP-Hw1_proto.DHResponse"
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "schema": {
                            "type": "json"
                        }
                    }
                }
            }
        },
        "/auth/reqpq": {
            "get": {
                "description": "first step of registeration which we send user info.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Request PQ",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The message ID (even and greater than zero).",
                        "name": "message_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The nonce (20 characters long).",
                        "name": "nonce",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WP-Hw1_proto.PQResponse"
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "schema": {
                            "type": "json"
                        }
                    }
                }
            }
        },
        "/biz/getusers": {
            "get": {
                "description": "after checking authentication , gets the information that you desire.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biz server"
                ],
                "summary": "get users of database.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "gets first 100 users if negetive",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "auth key",
                        "name": "auth_key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The message ID (even and greater than zero).",
                        "name": "message_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WP-Hw1_proto.GetUsersResponse"
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "schema": {
                            "type": "json"
                        }
                    }
                }
            }
        },
        "/biz/getusersinjection": {
            "get": {
                "description": "after checking authentication , gets the information that you desire by injection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biz server"
                ],
                "summary": "get users of database by injection.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gets first 100 users if negetive",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "auth key",
                        "name": "auth_key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The message ID (even and greater than zero).",
                        "name": "message_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WP-Hw1_proto.GetUsersResponse"
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "schema": {
                            "type": "json"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "WP-Hw1_proto.DHResponse": {
            "type": "object",
            "properties": {
                "b": {
                    "description": "public key generated by server",
                    "type": "integer"
                },
                "message_id": {
                    "description": "odd and greater than zero",
                    "type": "integer"
                },
                "nonce": {
                    "description": "the exact nonce from the clients request",
                    "type": "string"
                },
                "server_nonce": {
                    "description": "generated in the previous step",
                    "type": "string"
                }
            }
        },
        "WP-Hw1_proto.GetUsersResponse": {
            "type": "object",
            "properties": {
                "message_id": {
                    "description": "odd and greater than zero",
                    "type": "integer"
                },
                "users": {
                    "description": "array of users",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WP-Hw1_proto.USER"
                    }
                }
            }
        },
        "WP-Hw1_proto.PQResponse": {
            "type": "object",
            "properties": {
                "g": {
                    "description": "primitive root modulo of p",
                    "type": "integer"
                },
                "message_id": {
                    "description": "odd and greater than zero",
                    "type": "integer"
                },
                "nonce": {
                    "description": "the exact nonce from the clients request",
                    "type": "string"
                },
                "p": {
                    "description": "prime number",
                    "type": "integer"
                },
                "server_nonce": {
                    "description": "max_width -\u003e 20",
                    "type": "string"
                }
            }
        },
        "WP-Hw1_proto.USER": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "family": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        }
    }
}